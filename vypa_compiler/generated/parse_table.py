
# parse_table.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLORleftLANDleftEQNEleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEnonassocLNOTleftPERIODnonassocLPARENRPARENnonassocNEWCLASS COLON COMMA DIVIDE ELSE EQ EQUALS GE GT ID IF INT INT_CONST LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS NE NEW PERIOD PLUS RBRACE RBRACKET RETURN RPAREN SEMI STRING STRING_CONST SUPER THIS TIMES VOID WHILEstart : programprogram : func_def program\n               | class_def program\n               | emptyempty :func_def : func_header func_bodyfunc_header : var_type ID LPAREN param_list RPARENfunc_body : statement_new_scopeparam_list : VOID\n                  | func_paramfunc_param : func_param_def next_paramfunc_param_def : var_type IDnext_param : COMMA func_param\n                  | emptyclass_def : CLASS ID COLON ID class_bodyclass_body : LBRACE class_member_list RBRACEclass_member_list : class_memberclass_member_list : emptyclass_member : class_member_def class_next_memberclass_member_def : var_def\n                        | func_defclass_next_member : class_memberclass_next_member : emptyvar_type : INT\n                | STRING\n                | VOID\n                | IDstatement : var_def statement\n                 | var_assignment statement\n                 | statement_expr statement\n                 | statement_return statement\n                 | statement_while statement\n                 | statement_if statement\n                 | statement_this statement\n                 | statement_id statement\n                 | empty statement_new_scope : LBRACE statement RBRACEstatement_if : IF LPAREN expr RPAREN statement_new_scope ELSE statement_new_scopestatement_while : WHILE LPAREN expr RPAREN statement_new_scopestatement_return : RETURN expr SEMIstatement_this : THIS PERIOD ID EQUALS expr SEMIstatement_id : ID PERIOD ID EQUALS expr SEMIstatement_expr : expr SEMIvar_assignment : ID EQUALS expr SEMIvar_def : var_type ID multiple_var_defmultiple_var_def : SEMI\n                        | COMMA ID multiple_var_def\n    expr : LPAREN expr RPARENexpr : ID\n            | INT_CONST\n            | STRING_CONSTexpr : MINUS exprexpr : expr PLUS expr\n            | expr MINUS expr\n            | expr TIMES expr\n            | expr DIVIDE exprexpr : LNOT exprexpr : expr LOR expr\n            | expr LAND exprexpr : expr LT expr\n            | expr LE expr\n            | expr GE expr\n            | expr GT expr\n            | expr EQ expr\n            | expr NE exprexpr : LPAREN INT RPAREN expr\n            | LPAREN STRING RPAREN exprexpr : NEW IDexpr : ID PERIOD expr\n            | THIS PERIOD expr\n            | SUPER PERIOD exprexpr : ID LPAREN expr_list RPAREN\n            | ID LPAREN RPARENexpr_list : expr next_exprnext_expr : COMMA expr_list\n                 | empty'
    
_lr_action_items = {'CLASS':([0,3,4,15,16,46,123,156,],[7,7,7,-6,-8,-37,-15,-16,]),'$end':([0,1,2,3,4,5,13,14,15,16,46,123,156,],[-5,0,-1,-5,-5,-4,-2,-3,-6,-8,-37,-15,-16,]),'INT':([0,3,4,15,16,17,21,22,23,24,25,26,27,28,35,45,46,59,91,92,112,123,124,128,131,145,146,147,150,153,156,161,163,164,],[10,10,10,-6,-8,10,10,10,10,10,10,10,10,10,77,10,-37,-43,-45,-46,-40,-15,10,10,-44,10,-20,-21,-47,-39,-16,-42,-41,-38,]),'STRING':([0,3,4,15,16,17,21,22,23,24,25,26,27,28,35,45,46,59,91,92,112,123,124,128,131,145,146,147,150,153,156,161,163,164,],[11,11,11,-6,-8,11,11,11,11,11,11,11,11,11,78,11,-37,-43,-45,-46,-40,-15,11,11,-44,11,-20,-21,-47,-39,-16,-42,-41,-38,]),'VOID':([0,3,4,15,16,17,21,22,23,24,25,26,27,28,45,46,59,91,92,112,123,124,128,131,145,146,147,150,153,156,161,163,164,],[12,12,12,-6,-8,12,12,12,12,12,12,12,12,12,88,-37,-43,-45,-46,-40,-15,12,12,-44,12,-20,-21,-47,-39,-16,-42,-41,-38,]),'ID':([0,3,4,7,8,9,10,11,12,15,16,17,21,22,23,24,25,26,27,28,30,31,33,35,40,41,42,44,45,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,84,86,88,91,92,93,112,113,114,117,118,123,124,128,131,132,135,141,145,146,147,148,150,153,156,161,163,164,],[8,8,8,18,-27,19,-24,-25,-26,-6,-8,31,31,31,31,31,31,31,31,31,55,-27,73,73,73,73,83,85,8,-37,73,95,73,-43,73,73,73,73,73,73,73,73,73,73,73,73,73,73,120,73,125,-26,-45,-46,130,-40,73,73,73,73,-15,8,8,-44,73,73,73,8,-20,-21,160,-47,-39,-16,-42,-41,-38,]),'LBRACE':([6,85,126,137,140,162,],[17,124,-7,17,17,17,]),'RBRACE':([15,16,17,20,21,22,23,24,25,26,27,28,29,46,47,48,49,50,51,52,53,54,59,91,92,112,124,131,142,143,144,145,146,147,150,153,157,158,159,161,163,164,],[-6,-8,-5,46,-5,-5,-5,-5,-5,-5,-5,-5,-36,-37,-28,-29,-30,-31,-32,-33,-34,-35,-43,-45,-46,-40,-5,-44,156,-17,-18,-5,-20,-21,-47,-39,-19,-22,-23,-42,-41,-38,]),'RETURN':([17,21,22,23,24,25,26,27,28,46,59,91,92,112,131,150,153,161,163,164,],[33,33,33,33,33,33,33,33,33,-37,-43,-45,-46,-40,-44,-47,-39,-42,-41,-38,]),'WHILE':([17,21,22,23,24,25,26,27,28,46,59,91,92,112,131,150,153,161,163,164,],[34,34,34,34,34,34,34,34,34,-37,-43,-45,-46,-40,-44,-47,-39,-42,-41,-38,]),'IF':([17,21,22,23,24,25,26,27,28,46,59,91,92,112,131,150,153,161,163,164,],[36,36,36,36,36,36,36,36,36,-37,-43,-45,-46,-40,-44,-47,-39,-42,-41,-38,]),'THIS':([17,21,22,23,24,25,26,27,28,33,35,40,41,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,84,91,92,112,113,114,117,118,131,132,135,141,150,153,161,163,164,],[37,37,37,37,37,37,37,37,37,74,74,74,74,-37,74,74,74,-43,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-45,-46,-40,74,74,74,74,-44,74,74,74,-47,-39,-42,-41,-38,]),'LPAREN':([17,19,21,22,23,24,25,26,27,28,31,33,34,35,36,40,41,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,79,80,84,91,92,95,112,113,114,117,118,120,131,132,135,141,150,153,160,161,163,164,],[35,45,35,35,35,35,35,35,35,35,58,35,75,35,79,35,35,-37,35,35,35,-43,35,35,35,35,35,35,35,35,35,35,35,35,58,35,35,35,35,-45,-46,58,-40,35,35,35,35,58,-44,35,35,35,-47,-39,45,-42,-41,-38,]),'INT_CONST':([17,21,22,23,24,25,26,27,28,33,35,40,41,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,84,91,92,112,113,114,117,118,131,132,135,141,150,153,161,163,164,],[38,38,38,38,38,38,38,38,38,38,38,38,38,-37,38,38,38,-43,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-45,-46,-40,38,38,38,38,-44,38,38,38,-47,-39,-42,-41,-38,]),'STRING_CONST':([17,21,22,23,24,25,26,27,28,33,35,40,41,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,84,91,92,112,113,114,117,118,131,132,135,141,150,153,161,163,164,],[39,39,39,39,39,39,39,39,39,39,39,39,39,-37,39,39,39,-43,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-45,-46,-40,39,39,39,39,-44,39,39,39,-47,-39,-42,-41,-38,]),'MINUS':([17,21,22,23,24,25,26,27,28,31,32,33,35,38,39,40,41,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,79,80,81,82,83,84,91,92,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,135,138,139,141,150,151,153,155,161,163,164,],[40,40,40,40,40,40,40,40,40,-49,61,40,40,-50,-51,40,40,-37,40,40,40,-43,40,40,40,40,40,40,40,40,40,40,40,40,61,-49,40,61,40,40,-52,-57,-68,40,-45,-46,61,-49,-69,-73,61,-53,-54,-55,-56,61,61,61,61,61,61,61,61,-40,40,40,61,-48,40,40,61,-49,-70,-71,-44,40,-72,40,-66,-67,40,-47,61,-39,61,-42,-41,-38,]),'LNOT':([17,21,22,23,24,25,26,27,28,33,35,40,41,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,84,91,92,112,113,114,117,118,131,132,135,141,150,153,161,163,164,],[41,41,41,41,41,41,41,41,41,41,41,41,41,-37,41,41,41,-43,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-45,-46,-40,41,41,41,41,-44,41,41,41,-47,-39,-42,-41,-38,]),'NEW':([17,21,22,23,24,25,26,27,28,33,35,40,41,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,84,91,92,112,113,114,117,118,131,132,135,141,150,153,161,163,164,],[42,42,42,42,42,42,42,42,42,42,42,42,42,-37,42,42,42,-43,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-45,-46,-40,42,42,42,42,-44,42,42,42,-47,-39,-42,-41,-38,]),'SUPER':([17,21,22,23,24,25,26,27,28,33,35,40,41,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,84,91,92,112,113,114,117,118,131,132,135,141,150,153,161,163,164,],[43,43,43,43,43,43,43,43,43,43,43,43,43,-37,43,43,43,-43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-45,-46,-40,43,43,43,43,-44,43,43,43,-47,-39,-42,-41,-38,]),'COLON':([18,],[44,]),'EQUALS':([31,95,120,],[56,132,141,]),'PERIOD':([31,37,43,73,74,95,120,],[57,80,84,113,114,113,113,]),'SEMI':([31,32,38,39,55,72,73,81,82,83,94,95,96,98,100,101,102,103,104,105,106,107,108,109,110,111,116,120,121,122,130,133,138,139,151,155,160,],[-49,59,-50,-51,92,112,-49,-52,-57,-68,131,-49,-69,-73,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-64,-65,-48,-49,-70,-71,92,-72,-66,-67,161,163,92,]),'PLUS':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,60,-50,-51,60,-49,60,-52,-57,-68,60,-49,-69,-73,60,-53,-54,-55,-56,60,60,60,60,60,60,60,60,60,-48,60,-49,-70,-71,-72,-66,-67,60,60,]),'TIMES':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,62,-50,-51,62,-49,62,62,-57,-68,62,-49,-69,-73,62,62,62,-55,-56,62,62,62,62,62,62,62,62,62,-48,62,-49,-70,-71,-72,-66,-67,62,62,]),'DIVIDE':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,63,-50,-51,63,-49,63,63,-57,-68,63,-49,-69,-73,63,63,63,-55,-56,63,63,63,63,63,63,63,63,63,-48,63,-49,-70,-71,-72,-66,-67,63,63,]),'LOR':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,64,-50,-51,64,-49,64,-52,-57,-68,64,-49,-69,-73,64,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-64,-65,64,-48,64,-49,-70,-71,-72,-66,-67,64,64,]),'LAND':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,65,-50,-51,65,-49,65,-52,-57,-68,65,-49,-69,-73,65,-53,-54,-55,-56,65,-59,-60,-61,-62,-63,-64,-65,65,-48,65,-49,-70,-71,-72,-66,-67,65,65,]),'LT':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,66,-50,-51,66,-49,66,-52,-57,-68,66,-49,-69,-73,66,-53,-54,-55,-56,66,66,-60,-61,-62,-63,66,66,66,-48,66,-49,-70,-71,-72,-66,-67,66,66,]),'LE':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,67,-50,-51,67,-49,67,-52,-57,-68,67,-49,-69,-73,67,-53,-54,-55,-56,67,67,-60,-61,-62,-63,67,67,67,-48,67,-49,-70,-71,-72,-66,-67,67,67,]),'GE':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,68,-50,-51,68,-49,68,-52,-57,-68,68,-49,-69,-73,68,-53,-54,-55,-56,68,68,-60,-61,-62,-63,68,68,68,-48,68,-49,-70,-71,-72,-66,-67,68,68,]),'GT':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,69,-50,-51,69,-49,69,-52,-57,-68,69,-49,-69,-73,69,-53,-54,-55,-56,69,69,-60,-61,-62,-63,69,69,69,-48,69,-49,-70,-71,-72,-66,-67,69,69,]),'EQ':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,70,-50,-51,70,-49,70,-52,-57,-68,70,-49,-69,-73,70,-53,-54,-55,-56,70,70,-60,-61,-62,-63,-64,-65,70,-48,70,-49,-70,-71,-72,-66,-67,70,70,]),'NE':([31,32,38,39,72,73,76,81,82,83,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,120,121,122,133,138,139,151,155,],[-49,71,-50,-51,71,-49,71,-52,-57,-68,71,-49,-69,-73,71,-53,-54,-55,-56,71,71,-60,-61,-62,-63,-64,-65,71,-48,71,-49,-70,-71,-72,-66,-67,71,71,]),'RPAREN':([38,39,58,73,76,77,78,81,82,83,87,88,89,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,119,121,122,125,127,129,133,134,136,138,139,149,152,],[-50,-51,98,-49,116,117,118,-52,-57,-68,126,-9,-10,-5,-69,133,-73,-5,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-64,-65,137,-48,140,-70,-71,-12,-11,-14,-72,-74,-76,-66,-67,-13,-75,]),'COMMA':([38,39,55,73,81,82,83,90,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,121,122,125,130,133,138,139,160,],[-50,-51,93,-49,-52,-57,-68,128,-69,-73,135,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-64,-65,-48,-70,-71,-12,93,-72,-66,-67,93,]),'ELSE':([46,154,],[-37,162,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'program':([0,3,4,],[2,13,14,]),'func_def':([0,3,4,124,145,],[3,3,3,147,147,]),'class_def':([0,3,4,],[4,4,4,]),'empty':([0,3,4,17,21,22,23,24,25,26,27,28,90,99,124,145,],[5,5,5,29,29,29,29,29,29,29,29,29,129,136,144,159,]),'func_header':([0,3,4,124,145,],[6,6,6,6,6,]),'var_type':([0,3,4,17,21,22,23,24,25,26,27,28,45,124,128,145,],[9,9,9,30,30,30,30,30,30,30,30,30,86,148,86,148,]),'func_body':([6,],[15,]),'statement_new_scope':([6,137,140,162,],[16,153,154,164,]),'statement':([17,21,22,23,24,25,26,27,28,],[20,47,48,49,50,51,52,53,54,]),'var_def':([17,21,22,23,24,25,26,27,28,124,145,],[21,21,21,21,21,21,21,21,21,146,146,]),'var_assignment':([17,21,22,23,24,25,26,27,28,],[22,22,22,22,22,22,22,22,22,]),'statement_expr':([17,21,22,23,24,25,26,27,28,],[23,23,23,23,23,23,23,23,23,]),'statement_return':([17,21,22,23,24,25,26,27,28,],[24,24,24,24,24,24,24,24,24,]),'statement_while':([17,21,22,23,24,25,26,27,28,],[25,25,25,25,25,25,25,25,25,]),'statement_if':([17,21,22,23,24,25,26,27,28,],[26,26,26,26,26,26,26,26,26,]),'statement_this':([17,21,22,23,24,25,26,27,28,],[27,27,27,27,27,27,27,27,27,]),'statement_id':([17,21,22,23,24,25,26,27,28,],[28,28,28,28,28,28,28,28,28,]),'expr':([17,21,22,23,24,25,26,27,28,33,35,40,41,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,84,113,114,117,118,132,135,141,],[32,32,32,32,32,32,32,32,32,72,76,81,82,94,96,99,100,101,102,103,104,105,106,107,108,109,110,111,115,119,121,122,96,121,138,139,151,99,155,]),'param_list':([45,],[87,]),'func_param':([45,128,],[89,149,]),'func_param_def':([45,128,],[90,90,]),'multiple_var_def':([55,130,160,],[91,150,91,]),'expr_list':([58,135,],[97,152,]),'class_body':([85,],[123,]),'next_param':([90,],[127,]),'next_expr':([99,],[134,]),'class_member_list':([124,],[142,]),'class_member':([124,145,],[143,158,]),'class_member_def':([124,145,],[145,145,]),'class_next_member':([145,],[157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','_parser.py',32),
  ('program -> func_def program','program',2,'p_program','_parser.py',36),
  ('program -> class_def program','program',2,'p_program','_parser.py',37),
  ('program -> empty','program',1,'p_program','_parser.py',38),
  ('empty -> <empty>','empty',0,'p_empty','_parser.py',43),
  ('func_def -> func_header func_body','func_def',2,'p_func_def','_parser.py',48),
  ('func_header -> var_type ID LPAREN param_list RPAREN','func_header',5,'p_func_header','_parser.py',52),
  ('func_body -> statement_new_scope','func_body',1,'p_func_body','_parser.py',56),
  ('param_list -> VOID','param_list',1,'p_param_list','_parser.py',60),
  ('param_list -> func_param','param_list',1,'p_param_list','_parser.py',61),
  ('func_param -> func_param_def next_param','func_param',2,'p_func_param','_parser.py',65),
  ('func_param_def -> var_type ID','func_param_def',2,'p_func_param_def','_parser.py',69),
  ('next_param -> COMMA func_param','next_param',2,'p_next_param','_parser.py',73),
  ('next_param -> empty','next_param',1,'p_next_param','_parser.py',74),
  ('class_def -> CLASS ID COLON ID class_body','class_def',5,'p_class_def','_parser.py',82),
  ('class_body -> LBRACE class_member_list RBRACE','class_body',3,'p_class_body','_parser.py',86),
  ('class_member_list -> class_member','class_member_list',1,'p_class_member_list','_parser.py',91),
  ('class_member_list -> empty','class_member_list',1,'p_class_member_list_none','_parser.py',95),
  ('class_member -> class_member_def class_next_member','class_member',2,'p_class_member','_parser.py',99),
  ('class_member_def -> var_def','class_member_def',1,'p_class_member_def','_parser.py',103),
  ('class_member_def -> func_def','class_member_def',1,'p_class_member_def','_parser.py',104),
  ('class_next_member -> class_member','class_next_member',1,'p_class_next_member','_parser.py',108),
  ('class_next_member -> empty','class_next_member',1,'p_class_next_member_none','_parser.py',112),
  ('var_type -> INT','var_type',1,'p_var_type','_parser.py',117),
  ('var_type -> STRING','var_type',1,'p_var_type','_parser.py',118),
  ('var_type -> VOID','var_type',1,'p_var_type','_parser.py',119),
  ('var_type -> ID','var_type',1,'p_var_type','_parser.py',120),
  ('statement -> var_def statement','statement',2,'p_statement','_parser.py',125),
  ('statement -> var_assignment statement','statement',2,'p_statement','_parser.py',126),
  ('statement -> statement_expr statement','statement',2,'p_statement','_parser.py',127),
  ('statement -> statement_return statement','statement',2,'p_statement','_parser.py',128),
  ('statement -> statement_while statement','statement',2,'p_statement','_parser.py',129),
  ('statement -> statement_if statement','statement',2,'p_statement','_parser.py',130),
  ('statement -> statement_this statement','statement',2,'p_statement','_parser.py',131),
  ('statement -> statement_id statement','statement',2,'p_statement','_parser.py',132),
  ('statement -> empty','statement',1,'p_statement','_parser.py',133),
  ('statement_new_scope -> LBRACE statement RBRACE','statement_new_scope',3,'p_statement_new_scope','_parser.py',140),
  ('statement_if -> IF LPAREN expr RPAREN statement_new_scope ELSE statement_new_scope','statement_if',7,'p_if_statement','_parser.py',155),
  ('statement_while -> WHILE LPAREN expr RPAREN statement_new_scope','statement_while',5,'p_while_statement','_parser.py',159),
  ('statement_return -> RETURN expr SEMI','statement_return',3,'p_statement_return','_parser.py',163),
  ('statement_this -> THIS PERIOD ID EQUALS expr SEMI','statement_this',6,'p_statement_this','_parser.py',167),
  ('statement_id -> ID PERIOD ID EQUALS expr SEMI','statement_id',6,'p_statement_id','_parser.py',184),
  ('statement_expr -> expr SEMI','statement_expr',2,'p_statement_expr','_parser.py',188),
  ('var_assignment -> ID EQUALS expr SEMI','var_assignment',4,'p_var_assignment','_parser.py',192),
  ('var_def -> var_type ID multiple_var_def','var_def',3,'p_var_def','_parser.py',197),
  ('multiple_var_def -> SEMI','multiple_var_def',1,'p_multiple_var_def','_parser.py',201),
  ('multiple_var_def -> COMMA ID multiple_var_def','multiple_var_def',3,'p_multiple_var_def','_parser.py',202),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_paren','_parser.py',209),
  ('expr -> ID','expr',1,'p_expr_value','_parser.py',213),
  ('expr -> INT_CONST','expr',1,'p_expr_value','_parser.py',214),
  ('expr -> STRING_CONST','expr',1,'p_expr_value','_parser.py',215),
  ('expr -> MINUS expr','expr',2,'p_expr_arithmetic_operation_unary','_parser.py',219),
  ('expr -> expr PLUS expr','expr',3,'p_expr_arithmetic_operation','_parser.py',223),
  ('expr -> expr MINUS expr','expr',3,'p_expr_arithmetic_operation','_parser.py',224),
  ('expr -> expr TIMES expr','expr',3,'p_expr_arithmetic_operation','_parser.py',225),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_arithmetic_operation','_parser.py',226),
  ('expr -> LNOT expr','expr',2,'p_expr_logical_operation_unary','_parser.py',230),
  ('expr -> expr LOR expr','expr',3,'p_expr_logical_operation','_parser.py',234),
  ('expr -> expr LAND expr','expr',3,'p_expr_logical_operation','_parser.py',235),
  ('expr -> expr LT expr','expr',3,'p_expr_relational_operation','_parser.py',239),
  ('expr -> expr LE expr','expr',3,'p_expr_relational_operation','_parser.py',240),
  ('expr -> expr GE expr','expr',3,'p_expr_relational_operation','_parser.py',241),
  ('expr -> expr GT expr','expr',3,'p_expr_relational_operation','_parser.py',242),
  ('expr -> expr EQ expr','expr',3,'p_expr_relational_operation','_parser.py',243),
  ('expr -> expr NE expr','expr',3,'p_expr_relational_operation','_parser.py',244),
  ('expr -> LPAREN INT RPAREN expr','expr',4,'p_expr_cast','_parser.py',248),
  ('expr -> LPAREN STRING RPAREN expr','expr',4,'p_expr_cast','_parser.py',249),
  ('expr -> NEW ID','expr',2,'p_expr_class_new','_parser.py',254),
  ('expr -> ID PERIOD expr','expr',3,'p_expr_class_operations','_parser.py',258),
  ('expr -> THIS PERIOD expr','expr',3,'p_expr_class_operations','_parser.py',259),
  ('expr -> SUPER PERIOD expr','expr',3,'p_expr_class_operations','_parser.py',260),
  ('expr -> ID LPAREN expr_list RPAREN','expr',4,'p_expr_function_call','_parser.py',264),
  ('expr -> ID LPAREN RPAREN','expr',3,'p_expr_function_call','_parser.py',265),
  ('expr_list -> expr next_expr','expr_list',2,'p_expr_list','_parser.py',273),
  ('next_expr -> COMMA expr_list','next_expr',2,'p_next_expr','_parser.py',277),
  ('next_expr -> empty','next_expr',1,'p_next_expr','_parser.py',278),
]
