Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> start
Rule 1     start -> program
Rule 2     program -> func_def program
Rule 3     program -> class_def program
Rule 4     program -> empty
Rule 5     empty -> <empty>
Rule 6     func_def -> func_header func_body
Rule 7     func_header -> var_type ID LPAREN param_list RPAREN
Rule 8     func_body -> LBRACE statement RBRACE
Rule 9     param_list -> VOID
Rule 10    param_list -> func_param
Rule 11    func_param -> func_param_def next_param
Rule 12    func_param_def -> var_type ID
Rule 13    next_param -> COMMA func_param
Rule 14    next_param -> empty
Rule 15    class_def -> CLASS ID COLON ID class_body
Rule 16    class_body -> LBRACE class_member_list RBRACE
Rule 17    class_member_list -> class_member
Rule 18    class_member_list -> empty
Rule 19    class_member -> class_member_def class_next_member
Rule 20    class_member_def -> var_def
Rule 21    class_member_def -> func_def
Rule 22    class_next_member -> class_member
Rule 23    class_next_member -> empty
Rule 24    var_type -> INT
Rule 25    var_type -> STRING
Rule 26    var_type -> VOID
Rule 27    var_type -> ID
Rule 28    statement -> var_def statement
Rule 29    statement -> var_assignment statement
Rule 30    statement -> expr SEMI statement
Rule 31    statement -> RETURN expr SEMI statement
Rule 32    statement -> WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
Rule 33    statement -> IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
Rule 34    statement -> THIS PERIOD ID EQUALS expr SEMI statement
Rule 35    statement -> ID PERIOD ID EQUALS expr SEMI statement
Rule 36    statement -> empty
Rule 37    var_assignment -> ID EQUALS expr SEMI
Rule 38    var_def -> var_type ID multiple_var_def
Rule 39    multiple_var_def -> SEMI
Rule 40    multiple_var_def -> COMMA ID multiple_var_def
Rule 41    expr -> LPAREN expr RPAREN
Rule 42    expr -> ID
Rule 43    expr -> INT_CONST
Rule 44    expr -> STRING_CONST
Rule 45    expr -> MINUS expr
Rule 46    expr -> expr PLUS expr
Rule 47    expr -> expr MINUS expr
Rule 48    expr -> expr TIMES expr
Rule 49    expr -> expr DIVIDE expr
Rule 50    expr -> LNOT expr
Rule 51    expr -> expr LOR expr
Rule 52    expr -> expr LAND expr
Rule 53    expr -> expr LT expr
Rule 54    expr -> expr LE expr
Rule 55    expr -> expr GE expr
Rule 56    expr -> expr GT expr
Rule 57    expr -> expr EQ expr
Rule 58    expr -> expr NE expr
Rule 59    expr -> LPAREN INT RPAREN expr
Rule 60    expr -> LPAREN STRING RPAREN expr
Rule 61    expr -> NEW ID
Rule 62    expr -> ID PERIOD expr
Rule 63    expr -> THIS PERIOD expr
Rule 64    expr -> SUPER PERIOD expr
Rule 65    expr -> ID LPAREN expr_list RPAREN
Rule 66    expr -> ID LPAREN RPAREN
Rule 67    expr_list -> expr next_expr
Rule 68    next_expr -> COMMA expr_list
Rule 69    next_expr -> empty

Terminals, with rules where they appear

CLASS                : 15
COLON                : 15
COMMA                : 13 40 68
DIVIDE               : 49
ELSE                 : 33
EQ                   : 57
EQUALS               : 34 35 37
GE                   : 55
GT                   : 56
ID                   : 7 12 15 15 27 34 35 35 37 38 40 42 61 62 65 66
IF                   : 33
INT                  : 24 59
INT_CONST            : 43
LAND                 : 52
LBRACE               : 8 16 32 33 33
LBRACKET             : 
LE                   : 54
LNOT                 : 50
LOR                  : 51
LPAREN               : 7 32 33 41 59 60 65 66
LT                   : 53
MINUS                : 45 47
NE                   : 58
NEW                  : 61
PERIOD               : 34 35 62 63 64
PLUS                 : 46
RBRACE               : 8 16 32 33 33
RBRACKET             : 
RETURN               : 31
RPAREN               : 7 32 33 41 59 60 65 66
SEMI                 : 30 31 34 35 37 39
STRING               : 25 60
STRING_CONST         : 44
SUPER                : 64
THIS                 : 34 63
TIMES                : 48
VOID                 : 9 26
WHILE                : 32
error                : 

Nonterminals, with rules where they appear

class_body           : 15
class_def            : 3
class_member         : 17 22
class_member_def     : 19
class_member_list    : 16
class_next_member    : 19
empty                : 4 14 18 23 36 69
expr                 : 30 31 32 33 34 35 37 41 45 46 46 47 47 48 48 49 49 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 60 62 63 64 67
expr_list            : 65 68
func_body            : 6
func_def             : 2 21
func_header          : 6
func_param           : 10 13
func_param_def       : 11
multiple_var_def     : 38 40
next_expr            : 67
next_param           : 11
param_list           : 7
program              : 1 2 3
start                : 0
statement            : 8 28 29 30 31 32 32 33 33 33 34 35
var_assignment       : 29
var_def              : 20 28
var_type             : 7 12 38

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . program
    (2) program -> . func_def program
    (3) program -> . class_def program
    (4) program -> . empty
    (6) func_def -> . func_header func_body
    (15) class_def -> . CLASS ID COLON ID class_body
    (5) empty -> .
    (7) func_header -> . var_type ID LPAREN param_list RPAREN
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    CLASS           shift and go to state 7
    $end            reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12
    ID              shift and go to state 8

    start                          shift and go to state 1
    program                        shift and go to state 2
    func_def                       shift and go to state 3
    class_def                      shift and go to state 4
    empty                          shift and go to state 5
    func_header                    shift and go to state 6
    var_type                       shift and go to state 9

state 1

    (0) S' -> start .



state 2

    (1) start -> program .

    $end            reduce using rule 1 (start -> program .)


state 3

    (2) program -> func_def . program
    (2) program -> . func_def program
    (3) program -> . class_def program
    (4) program -> . empty
    (6) func_def -> . func_header func_body
    (15) class_def -> . CLASS ID COLON ID class_body
    (5) empty -> .
    (7) func_header -> . var_type ID LPAREN param_list RPAREN
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    CLASS           shift and go to state 7
    $end            reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12
    ID              shift and go to state 8

    func_def                       shift and go to state 3
    program                        shift and go to state 13
    class_def                      shift and go to state 4
    empty                          shift and go to state 5
    func_header                    shift and go to state 6
    var_type                       shift and go to state 9

state 4

    (3) program -> class_def . program
    (2) program -> . func_def program
    (3) program -> . class_def program
    (4) program -> . empty
    (6) func_def -> . func_header func_body
    (15) class_def -> . CLASS ID COLON ID class_body
    (5) empty -> .
    (7) func_header -> . var_type ID LPAREN param_list RPAREN
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    CLASS           shift and go to state 7
    $end            reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12
    ID              shift and go to state 8

    class_def                      shift and go to state 4
    program                        shift and go to state 14
    func_def                       shift and go to state 3
    empty                          shift and go to state 5
    func_header                    shift and go to state 6
    var_type                       shift and go to state 9

state 5

    (4) program -> empty .

    $end            reduce using rule 4 (program -> empty .)


state 6

    (6) func_def -> func_header . func_body
    (8) func_body -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 16

    func_body                      shift and go to state 15

state 7

    (15) class_def -> CLASS . ID COLON ID class_body

    ID              shift and go to state 17


state 8

    (27) var_type -> ID .

    ID              reduce using rule 27 (var_type -> ID .)


state 9

    (7) func_header -> var_type . ID LPAREN param_list RPAREN

    ID              shift and go to state 18


state 10

    (24) var_type -> INT .

    ID              reduce using rule 24 (var_type -> INT .)


state 11

    (25) var_type -> STRING .

    ID              reduce using rule 25 (var_type -> STRING .)


state 12

    (26) var_type -> VOID .

    ID              reduce using rule 26 (var_type -> VOID .)


state 13

    (2) program -> func_def program .

    $end            reduce using rule 2 (program -> func_def program .)


state 14

    (3) program -> class_def program .

    $end            reduce using rule 3 (program -> class_def program .)


state 15

    (6) func_def -> func_header func_body .

    CLASS           reduce using rule 6 (func_def -> func_header func_body .)
    INT             reduce using rule 6 (func_def -> func_header func_body .)
    STRING          reduce using rule 6 (func_def -> func_header func_body .)
    VOID            reduce using rule 6 (func_def -> func_header func_body .)
    ID              reduce using rule 6 (func_def -> func_header func_body .)
    $end            reduce using rule 6 (func_def -> func_header func_body .)
    RBRACE          reduce using rule 6 (func_def -> func_header func_body .)


state 16

    (8) func_body -> LBRACE . statement RBRACE
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    statement                      shift and go to state 19
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    expr                           shift and go to state 22
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 17

    (15) class_def -> CLASS ID . COLON ID class_body

    COLON           shift and go to state 37


state 18

    (7) func_header -> var_type ID . LPAREN param_list RPAREN

    LPAREN          shift and go to state 38


state 19

    (8) func_body -> LBRACE statement . RBRACE

    RBRACE          shift and go to state 39


state 20

    (28) statement -> var_def . statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    var_def                        shift and go to state 20
    statement                      shift and go to state 40
    var_assignment                 shift and go to state 21
    expr                           shift and go to state 22
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 21

    (29) statement -> var_assignment . statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    var_assignment                 shift and go to state 21
    statement                      shift and go to state 41
    var_def                        shift and go to state 20
    expr                           shift and go to state 22
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 22

    (30) statement -> expr . SEMI statement
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 23

    (31) statement -> RETURN . expr SEMI statement
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 55

state 24

    (32) statement -> WHILE . LPAREN expr RPAREN LBRACE statement RBRACE statement

    LPAREN          shift and go to state 58


state 25

    (41) expr -> LPAREN . expr RPAREN
    (59) expr -> LPAREN . INT RPAREN expr
    (60) expr -> LPAREN . STRING RPAREN expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    INT             shift and go to state 60
    STRING          shift and go to state 61
    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 59

state 26

    (33) statement -> IF . LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement

    LPAREN          shift and go to state 62


state 27

    (34) statement -> THIS . PERIOD ID EQUALS expr SEMI statement
    (63) expr -> THIS . PERIOD expr

    PERIOD          shift and go to state 63


state 28

    (35) statement -> ID . PERIOD ID EQUALS expr SEMI statement
    (37) var_assignment -> ID . EQUALS expr SEMI
    (42) expr -> ID .
    (62) expr -> ID . PERIOD expr
    (65) expr -> ID . LPAREN expr_list RPAREN
    (66) expr -> ID . LPAREN RPAREN
    (27) var_type -> ID .

    PERIOD          shift and go to state 64
    EQUALS          shift and go to state 65
    SEMI            reduce using rule 42 (expr -> ID .)
    PLUS            reduce using rule 42 (expr -> ID .)
    MINUS           reduce using rule 42 (expr -> ID .)
    TIMES           reduce using rule 42 (expr -> ID .)
    DIVIDE          reduce using rule 42 (expr -> ID .)
    LOR             reduce using rule 42 (expr -> ID .)
    LAND            reduce using rule 42 (expr -> ID .)
    LT              reduce using rule 42 (expr -> ID .)
    LE              reduce using rule 42 (expr -> ID .)
    GE              reduce using rule 42 (expr -> ID .)
    GT              reduce using rule 42 (expr -> ID .)
    EQ              reduce using rule 42 (expr -> ID .)
    NE              reduce using rule 42 (expr -> ID .)
    LPAREN          shift and go to state 66
    ID              reduce using rule 27 (var_type -> ID .)


state 29

    (36) statement -> empty .

    RBRACE          reduce using rule 36 (statement -> empty .)


state 30

    (38) var_def -> var_type . ID multiple_var_def

    ID              shift and go to state 67


state 31

    (43) expr -> INT_CONST .

    SEMI            reduce using rule 43 (expr -> INT_CONST .)
    PLUS            reduce using rule 43 (expr -> INT_CONST .)
    MINUS           reduce using rule 43 (expr -> INT_CONST .)
    TIMES           reduce using rule 43 (expr -> INT_CONST .)
    DIVIDE          reduce using rule 43 (expr -> INT_CONST .)
    LOR             reduce using rule 43 (expr -> INT_CONST .)
    LAND            reduce using rule 43 (expr -> INT_CONST .)
    LT              reduce using rule 43 (expr -> INT_CONST .)
    LE              reduce using rule 43 (expr -> INT_CONST .)
    GE              reduce using rule 43 (expr -> INT_CONST .)
    GT              reduce using rule 43 (expr -> INT_CONST .)
    EQ              reduce using rule 43 (expr -> INT_CONST .)
    NE              reduce using rule 43 (expr -> INT_CONST .)
    RPAREN          reduce using rule 43 (expr -> INT_CONST .)
    COMMA           reduce using rule 43 (expr -> INT_CONST .)


state 32

    (44) expr -> STRING_CONST .

    SEMI            reduce using rule 44 (expr -> STRING_CONST .)
    PLUS            reduce using rule 44 (expr -> STRING_CONST .)
    MINUS           reduce using rule 44 (expr -> STRING_CONST .)
    TIMES           reduce using rule 44 (expr -> STRING_CONST .)
    DIVIDE          reduce using rule 44 (expr -> STRING_CONST .)
    LOR             reduce using rule 44 (expr -> STRING_CONST .)
    LAND            reduce using rule 44 (expr -> STRING_CONST .)
    LT              reduce using rule 44 (expr -> STRING_CONST .)
    LE              reduce using rule 44 (expr -> STRING_CONST .)
    GE              reduce using rule 44 (expr -> STRING_CONST .)
    GT              reduce using rule 44 (expr -> STRING_CONST .)
    EQ              reduce using rule 44 (expr -> STRING_CONST .)
    NE              reduce using rule 44 (expr -> STRING_CONST .)
    RPAREN          reduce using rule 44 (expr -> STRING_CONST .)
    COMMA           reduce using rule 44 (expr -> STRING_CONST .)


state 33

    (45) expr -> MINUS . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 68

state 34

    (50) expr -> LNOT . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 69

state 35

    (61) expr -> NEW . ID

    ID              shift and go to state 70


state 36

    (64) expr -> SUPER . PERIOD expr

    PERIOD          shift and go to state 71


state 37

    (15) class_def -> CLASS ID COLON . ID class_body

    ID              shift and go to state 72


state 38

    (7) func_header -> var_type ID LPAREN . param_list RPAREN
    (9) param_list -> . VOID
    (10) param_list -> . func_param
    (11) func_param -> . func_param_def next_param
    (12) func_param_def -> . var_type ID
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    VOID            shift and go to state 75
    INT             shift and go to state 10
    STRING          shift and go to state 11
    ID              shift and go to state 8

    var_type                       shift and go to state 73
    param_list                     shift and go to state 74
    func_param                     shift and go to state 76
    func_param_def                 shift and go to state 77

state 39

    (8) func_body -> LBRACE statement RBRACE .

    CLASS           reduce using rule 8 (func_body -> LBRACE statement RBRACE .)
    INT             reduce using rule 8 (func_body -> LBRACE statement RBRACE .)
    STRING          reduce using rule 8 (func_body -> LBRACE statement RBRACE .)
    VOID            reduce using rule 8 (func_body -> LBRACE statement RBRACE .)
    ID              reduce using rule 8 (func_body -> LBRACE statement RBRACE .)
    $end            reduce using rule 8 (func_body -> LBRACE statement RBRACE .)
    RBRACE          reduce using rule 8 (func_body -> LBRACE statement RBRACE .)


state 40

    (28) statement -> var_def statement .

    RBRACE          reduce using rule 28 (statement -> var_def statement .)


state 41

    (29) statement -> var_assignment statement .

    RBRACE          reduce using rule 29 (statement -> var_assignment statement .)


state 42

    (30) statement -> expr SEMI . statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 78
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 43

    (46) expr -> expr PLUS . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 79

state 44

    (47) expr -> expr MINUS . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 80

state 45

    (48) expr -> expr TIMES . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 81

state 46

    (49) expr -> expr DIVIDE . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 82

state 47

    (51) expr -> expr LOR . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 83

state 48

    (52) expr -> expr LAND . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 84

state 49

    (53) expr -> expr LT . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 85

state 50

    (54) expr -> expr LE . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 86

state 51

    (55) expr -> expr GE . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 87

state 52

    (56) expr -> expr GT . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 88

state 53

    (57) expr -> expr EQ . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 89

state 54

    (58) expr -> expr NE . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 90

state 55

    (31) statement -> RETURN expr . SEMI statement
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            shift and go to state 91
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 56

    (42) expr -> ID .
    (62) expr -> ID . PERIOD expr
    (65) expr -> ID . LPAREN expr_list RPAREN
    (66) expr -> ID . LPAREN RPAREN

    SEMI            reduce using rule 42 (expr -> ID .)
    PLUS            reduce using rule 42 (expr -> ID .)
    MINUS           reduce using rule 42 (expr -> ID .)
    TIMES           reduce using rule 42 (expr -> ID .)
    DIVIDE          reduce using rule 42 (expr -> ID .)
    LOR             reduce using rule 42 (expr -> ID .)
    LAND            reduce using rule 42 (expr -> ID .)
    LT              reduce using rule 42 (expr -> ID .)
    LE              reduce using rule 42 (expr -> ID .)
    GE              reduce using rule 42 (expr -> ID .)
    GT              reduce using rule 42 (expr -> ID .)
    EQ              reduce using rule 42 (expr -> ID .)
    NE              reduce using rule 42 (expr -> ID .)
    RPAREN          reduce using rule 42 (expr -> ID .)
    COMMA           reduce using rule 42 (expr -> ID .)
    PERIOD          shift and go to state 92
    LPAREN          shift and go to state 66


state 57

    (63) expr -> THIS . PERIOD expr

    PERIOD          shift and go to state 93


state 58

    (32) statement -> WHILE LPAREN . expr RPAREN LBRACE statement RBRACE statement
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 94

state 59

    (41) expr -> LPAREN expr . RPAREN
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 60

    (59) expr -> LPAREN INT . RPAREN expr

    RPAREN          shift and go to state 96


state 61

    (60) expr -> LPAREN STRING . RPAREN expr

    RPAREN          shift and go to state 97


state 62

    (33) statement -> IF LPAREN . expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 98

state 63

    (34) statement -> THIS PERIOD . ID EQUALS expr SEMI statement
    (63) expr -> THIS PERIOD . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    ID              shift and go to state 99
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 100

state 64

    (35) statement -> ID PERIOD . ID EQUALS expr SEMI statement
    (62) expr -> ID PERIOD . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    ID              shift and go to state 101
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 102

state 65

    (37) var_assignment -> ID EQUALS . expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 103

state 66

    (65) expr -> ID LPAREN . expr_list RPAREN
    (66) expr -> ID LPAREN . RPAREN
    (67) expr_list -> . expr next_expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 105
    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr_list                      shift and go to state 104
    expr                           shift and go to state 106

state 67

    (38) var_def -> var_type ID . multiple_var_def
    (39) multiple_var_def -> . SEMI
    (40) multiple_var_def -> . COMMA ID multiple_var_def

    SEMI            shift and go to state 108
    COMMA           shift and go to state 109

    multiple_var_def               shift and go to state 107

state 68

    (45) expr -> MINUS expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 45 (expr -> MINUS expr .)
    PLUS            reduce using rule 45 (expr -> MINUS expr .)
    MINUS           reduce using rule 45 (expr -> MINUS expr .)
    LOR             reduce using rule 45 (expr -> MINUS expr .)
    LAND            reduce using rule 45 (expr -> MINUS expr .)
    LT              reduce using rule 45 (expr -> MINUS expr .)
    LE              reduce using rule 45 (expr -> MINUS expr .)
    GE              reduce using rule 45 (expr -> MINUS expr .)
    GT              reduce using rule 45 (expr -> MINUS expr .)
    EQ              reduce using rule 45 (expr -> MINUS expr .)
    NE              reduce using rule 45 (expr -> MINUS expr .)
    RPAREN          reduce using rule 45 (expr -> MINUS expr .)
    COMMA           reduce using rule 45 (expr -> MINUS expr .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! TIMES           [ reduce using rule 45 (expr -> MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 45 (expr -> MINUS expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 69

    (50) expr -> LNOT expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 50 (expr -> LNOT expr .)
    PLUS            reduce using rule 50 (expr -> LNOT expr .)
    MINUS           reduce using rule 50 (expr -> LNOT expr .)
    TIMES           reduce using rule 50 (expr -> LNOT expr .)
    DIVIDE          reduce using rule 50 (expr -> LNOT expr .)
    LOR             reduce using rule 50 (expr -> LNOT expr .)
    LAND            reduce using rule 50 (expr -> LNOT expr .)
    LT              reduce using rule 50 (expr -> LNOT expr .)
    LE              reduce using rule 50 (expr -> LNOT expr .)
    GE              reduce using rule 50 (expr -> LNOT expr .)
    GT              reduce using rule 50 (expr -> LNOT expr .)
    EQ              reduce using rule 50 (expr -> LNOT expr .)
    NE              reduce using rule 50 (expr -> LNOT expr .)
    RPAREN          reduce using rule 50 (expr -> LNOT expr .)
    COMMA           reduce using rule 50 (expr -> LNOT expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 70

    (61) expr -> NEW ID .

    SEMI            reduce using rule 61 (expr -> NEW ID .)
    PLUS            reduce using rule 61 (expr -> NEW ID .)
    MINUS           reduce using rule 61 (expr -> NEW ID .)
    TIMES           reduce using rule 61 (expr -> NEW ID .)
    DIVIDE          reduce using rule 61 (expr -> NEW ID .)
    LOR             reduce using rule 61 (expr -> NEW ID .)
    LAND            reduce using rule 61 (expr -> NEW ID .)
    LT              reduce using rule 61 (expr -> NEW ID .)
    LE              reduce using rule 61 (expr -> NEW ID .)
    GE              reduce using rule 61 (expr -> NEW ID .)
    GT              reduce using rule 61 (expr -> NEW ID .)
    EQ              reduce using rule 61 (expr -> NEW ID .)
    NE              reduce using rule 61 (expr -> NEW ID .)
    RPAREN          reduce using rule 61 (expr -> NEW ID .)
    COMMA           reduce using rule 61 (expr -> NEW ID .)


state 71

    (64) expr -> SUPER PERIOD . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 110

state 72

    (15) class_def -> CLASS ID COLON ID . class_body
    (16) class_body -> . LBRACE class_member_list RBRACE

    LBRACE          shift and go to state 112

    class_body                     shift and go to state 111

state 73

    (12) func_param_def -> var_type . ID

    ID              shift and go to state 113


state 74

    (7) func_header -> var_type ID LPAREN param_list . RPAREN

    RPAREN          shift and go to state 114


state 75

    (9) param_list -> VOID .
    (26) var_type -> VOID .

    RPAREN          reduce using rule 9 (param_list -> VOID .)
    ID              reduce using rule 26 (var_type -> VOID .)


state 76

    (10) param_list -> func_param .

    RPAREN          reduce using rule 10 (param_list -> func_param .)


state 77

    (11) func_param -> func_param_def . next_param
    (13) next_param -> . COMMA func_param
    (14) next_param -> . empty
    (5) empty -> .

    COMMA           shift and go to state 116
    RPAREN          reduce using rule 5 (empty -> .)

    next_param                     shift and go to state 115
    empty                          shift and go to state 117

state 78

    (30) statement -> expr SEMI statement .

    RBRACE          reduce using rule 30 (statement -> expr SEMI statement .)


state 79

    (46) expr -> expr PLUS expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 46 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 46 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 46 (expr -> expr PLUS expr .)
    LOR             reduce using rule 46 (expr -> expr PLUS expr .)
    LAND            reduce using rule 46 (expr -> expr PLUS expr .)
    LT              reduce using rule 46 (expr -> expr PLUS expr .)
    LE              reduce using rule 46 (expr -> expr PLUS expr .)
    GE              reduce using rule 46 (expr -> expr PLUS expr .)
    GT              reduce using rule 46 (expr -> expr PLUS expr .)
    EQ              reduce using rule 46 (expr -> expr PLUS expr .)
    NE              reduce using rule 46 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 46 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 46 (expr -> expr PLUS expr .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! TIMES           [ reduce using rule 46 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 46 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 80

    (47) expr -> expr MINUS expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 47 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 47 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 47 (expr -> expr MINUS expr .)
    LOR             reduce using rule 47 (expr -> expr MINUS expr .)
    LAND            reduce using rule 47 (expr -> expr MINUS expr .)
    LT              reduce using rule 47 (expr -> expr MINUS expr .)
    LE              reduce using rule 47 (expr -> expr MINUS expr .)
    GE              reduce using rule 47 (expr -> expr MINUS expr .)
    GT              reduce using rule 47 (expr -> expr MINUS expr .)
    EQ              reduce using rule 47 (expr -> expr MINUS expr .)
    NE              reduce using rule 47 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 47 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 47 (expr -> expr MINUS expr .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! TIMES           [ reduce using rule 47 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 47 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 81

    (48) expr -> expr TIMES expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 48 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 48 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 48 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 48 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 48 (expr -> expr TIMES expr .)
    LOR             reduce using rule 48 (expr -> expr TIMES expr .)
    LAND            reduce using rule 48 (expr -> expr TIMES expr .)
    LT              reduce using rule 48 (expr -> expr TIMES expr .)
    LE              reduce using rule 48 (expr -> expr TIMES expr .)
    GE              reduce using rule 48 (expr -> expr TIMES expr .)
    GT              reduce using rule 48 (expr -> expr TIMES expr .)
    EQ              reduce using rule 48 (expr -> expr TIMES expr .)
    NE              reduce using rule 48 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 48 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 48 (expr -> expr TIMES expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 82

    (49) expr -> expr DIVIDE expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 49 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 49 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 49 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 49 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 49 (expr -> expr DIVIDE expr .)
    LOR             reduce using rule 49 (expr -> expr DIVIDE expr .)
    LAND            reduce using rule 49 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 49 (expr -> expr DIVIDE expr .)
    LE              reduce using rule 49 (expr -> expr DIVIDE expr .)
    GE              reduce using rule 49 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 49 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 49 (expr -> expr DIVIDE expr .)
    NE              reduce using rule 49 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 49 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 49 (expr -> expr DIVIDE expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 83

    (51) expr -> expr LOR expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 51 (expr -> expr LOR expr .)
    LOR             reduce using rule 51 (expr -> expr LOR expr .)
    RPAREN          reduce using rule 51 (expr -> expr LOR expr .)
    COMMA           reduce using rule 51 (expr -> expr LOR expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! PLUS            [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! MINUS           [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! TIMES           [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! DIVIDE          [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! LAND            [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! LT              [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! LE              [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! GE              [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! GT              [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! EQ              [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! NE              [ reduce using rule 51 (expr -> expr LOR expr .) ]
  ! LOR             [ shift and go to state 47 ]


state 84

    (52) expr -> expr LAND expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 52 (expr -> expr LAND expr .)
    LOR             reduce using rule 52 (expr -> expr LAND expr .)
    LAND            reduce using rule 52 (expr -> expr LAND expr .)
    RPAREN          reduce using rule 52 (expr -> expr LAND expr .)
    COMMA           reduce using rule 52 (expr -> expr LAND expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! PLUS            [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! MINUS           [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! TIMES           [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! DIVIDE          [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! LT              [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! LE              [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! GE              [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! GT              [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! EQ              [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! NE              [ reduce using rule 52 (expr -> expr LAND expr .) ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]


state 85

    (53) expr -> expr LT expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 53 (expr -> expr LT expr .)
    LOR             reduce using rule 53 (expr -> expr LT expr .)
    LAND            reduce using rule 53 (expr -> expr LT expr .)
    LT              reduce using rule 53 (expr -> expr LT expr .)
    LE              reduce using rule 53 (expr -> expr LT expr .)
    GE              reduce using rule 53 (expr -> expr LT expr .)
    GT              reduce using rule 53 (expr -> expr LT expr .)
    EQ              reduce using rule 53 (expr -> expr LT expr .)
    NE              reduce using rule 53 (expr -> expr LT expr .)
    RPAREN          reduce using rule 53 (expr -> expr LT expr .)
    COMMA           reduce using rule 53 (expr -> expr LT expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! PLUS            [ reduce using rule 53 (expr -> expr LT expr .) ]
  ! MINUS           [ reduce using rule 53 (expr -> expr LT expr .) ]
  ! TIMES           [ reduce using rule 53 (expr -> expr LT expr .) ]
  ! DIVIDE          [ reduce using rule 53 (expr -> expr LT expr .) ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 86

    (54) expr -> expr LE expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 54 (expr -> expr LE expr .)
    LOR             reduce using rule 54 (expr -> expr LE expr .)
    LAND            reduce using rule 54 (expr -> expr LE expr .)
    LT              reduce using rule 54 (expr -> expr LE expr .)
    LE              reduce using rule 54 (expr -> expr LE expr .)
    GE              reduce using rule 54 (expr -> expr LE expr .)
    GT              reduce using rule 54 (expr -> expr LE expr .)
    EQ              reduce using rule 54 (expr -> expr LE expr .)
    NE              reduce using rule 54 (expr -> expr LE expr .)
    RPAREN          reduce using rule 54 (expr -> expr LE expr .)
    COMMA           reduce using rule 54 (expr -> expr LE expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! PLUS            [ reduce using rule 54 (expr -> expr LE expr .) ]
  ! MINUS           [ reduce using rule 54 (expr -> expr LE expr .) ]
  ! TIMES           [ reduce using rule 54 (expr -> expr LE expr .) ]
  ! DIVIDE          [ reduce using rule 54 (expr -> expr LE expr .) ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 87

    (55) expr -> expr GE expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 55 (expr -> expr GE expr .)
    LOR             reduce using rule 55 (expr -> expr GE expr .)
    LAND            reduce using rule 55 (expr -> expr GE expr .)
    LT              reduce using rule 55 (expr -> expr GE expr .)
    LE              reduce using rule 55 (expr -> expr GE expr .)
    GE              reduce using rule 55 (expr -> expr GE expr .)
    GT              reduce using rule 55 (expr -> expr GE expr .)
    EQ              reduce using rule 55 (expr -> expr GE expr .)
    NE              reduce using rule 55 (expr -> expr GE expr .)
    RPAREN          reduce using rule 55 (expr -> expr GE expr .)
    COMMA           reduce using rule 55 (expr -> expr GE expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! PLUS            [ reduce using rule 55 (expr -> expr GE expr .) ]
  ! MINUS           [ reduce using rule 55 (expr -> expr GE expr .) ]
  ! TIMES           [ reduce using rule 55 (expr -> expr GE expr .) ]
  ! DIVIDE          [ reduce using rule 55 (expr -> expr GE expr .) ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 88

    (56) expr -> expr GT expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 56 (expr -> expr GT expr .)
    LOR             reduce using rule 56 (expr -> expr GT expr .)
    LAND            reduce using rule 56 (expr -> expr GT expr .)
    LT              reduce using rule 56 (expr -> expr GT expr .)
    LE              reduce using rule 56 (expr -> expr GT expr .)
    GE              reduce using rule 56 (expr -> expr GT expr .)
    GT              reduce using rule 56 (expr -> expr GT expr .)
    EQ              reduce using rule 56 (expr -> expr GT expr .)
    NE              reduce using rule 56 (expr -> expr GT expr .)
    RPAREN          reduce using rule 56 (expr -> expr GT expr .)
    COMMA           reduce using rule 56 (expr -> expr GT expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! PLUS            [ reduce using rule 56 (expr -> expr GT expr .) ]
  ! MINUS           [ reduce using rule 56 (expr -> expr GT expr .) ]
  ! TIMES           [ reduce using rule 56 (expr -> expr GT expr .) ]
  ! DIVIDE          [ reduce using rule 56 (expr -> expr GT expr .) ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 89

    (57) expr -> expr EQ expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 57 (expr -> expr EQ expr .)
    LOR             reduce using rule 57 (expr -> expr EQ expr .)
    LAND            reduce using rule 57 (expr -> expr EQ expr .)
    EQ              reduce using rule 57 (expr -> expr EQ expr .)
    NE              reduce using rule 57 (expr -> expr EQ expr .)
    RPAREN          reduce using rule 57 (expr -> expr EQ expr .)
    COMMA           reduce using rule 57 (expr -> expr EQ expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52

  ! PLUS            [ reduce using rule 57 (expr -> expr EQ expr .) ]
  ! MINUS           [ reduce using rule 57 (expr -> expr EQ expr .) ]
  ! TIMES           [ reduce using rule 57 (expr -> expr EQ expr .) ]
  ! DIVIDE          [ reduce using rule 57 (expr -> expr EQ expr .) ]
  ! LT              [ reduce using rule 57 (expr -> expr EQ expr .) ]
  ! LE              [ reduce using rule 57 (expr -> expr EQ expr .) ]
  ! GE              [ reduce using rule 57 (expr -> expr EQ expr .) ]
  ! GT              [ reduce using rule 57 (expr -> expr EQ expr .) ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 90

    (58) expr -> expr NE expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 58 (expr -> expr NE expr .)
    LOR             reduce using rule 58 (expr -> expr NE expr .)
    LAND            reduce using rule 58 (expr -> expr NE expr .)
    EQ              reduce using rule 58 (expr -> expr NE expr .)
    NE              reduce using rule 58 (expr -> expr NE expr .)
    RPAREN          reduce using rule 58 (expr -> expr NE expr .)
    COMMA           reduce using rule 58 (expr -> expr NE expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52

  ! PLUS            [ reduce using rule 58 (expr -> expr NE expr .) ]
  ! MINUS           [ reduce using rule 58 (expr -> expr NE expr .) ]
  ! TIMES           [ reduce using rule 58 (expr -> expr NE expr .) ]
  ! DIVIDE          [ reduce using rule 58 (expr -> expr NE expr .) ]
  ! LT              [ reduce using rule 58 (expr -> expr NE expr .) ]
  ! LE              [ reduce using rule 58 (expr -> expr NE expr .) ]
  ! GE              [ reduce using rule 58 (expr -> expr NE expr .) ]
  ! GT              [ reduce using rule 58 (expr -> expr NE expr .) ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 91

    (31) statement -> RETURN expr SEMI . statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 118
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 92

    (62) expr -> ID PERIOD . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 102

state 93

    (63) expr -> THIS PERIOD . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 100

state 94

    (32) statement -> WHILE LPAREN expr . RPAREN LBRACE statement RBRACE statement
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    RPAREN          shift and go to state 119
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 95

    (41) expr -> LPAREN expr RPAREN .

    SEMI            reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    LOR             reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    LAND            reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    LE              reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    GE              reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    NE              reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 41 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 41 (expr -> LPAREN expr RPAREN .)


state 96

    (59) expr -> LPAREN INT RPAREN . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 120

state 97

    (60) expr -> LPAREN STRING RPAREN . expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 121

state 98

    (33) statement -> IF LPAREN expr . RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    RPAREN          shift and go to state 122
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 99

    (34) statement -> THIS PERIOD ID . EQUALS expr SEMI statement
    (42) expr -> ID .
    (62) expr -> ID . PERIOD expr
    (65) expr -> ID . LPAREN expr_list RPAREN
    (66) expr -> ID . LPAREN RPAREN

    EQUALS          shift and go to state 123
    PLUS            reduce using rule 42 (expr -> ID .)
    MINUS           reduce using rule 42 (expr -> ID .)
    TIMES           reduce using rule 42 (expr -> ID .)
    DIVIDE          reduce using rule 42 (expr -> ID .)
    LOR             reduce using rule 42 (expr -> ID .)
    LAND            reduce using rule 42 (expr -> ID .)
    LT              reduce using rule 42 (expr -> ID .)
    LE              reduce using rule 42 (expr -> ID .)
    GE              reduce using rule 42 (expr -> ID .)
    GT              reduce using rule 42 (expr -> ID .)
    EQ              reduce using rule 42 (expr -> ID .)
    NE              reduce using rule 42 (expr -> ID .)
    SEMI            reduce using rule 42 (expr -> ID .)
    PERIOD          shift and go to state 92
    LPAREN          shift and go to state 66


state 100

    (63) expr -> THIS PERIOD expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 63 (expr -> THIS PERIOD expr .)
    PLUS            reduce using rule 63 (expr -> THIS PERIOD expr .)
    MINUS           reduce using rule 63 (expr -> THIS PERIOD expr .)
    TIMES           reduce using rule 63 (expr -> THIS PERIOD expr .)
    DIVIDE          reduce using rule 63 (expr -> THIS PERIOD expr .)
    LOR             reduce using rule 63 (expr -> THIS PERIOD expr .)
    LAND            reduce using rule 63 (expr -> THIS PERIOD expr .)
    LT              reduce using rule 63 (expr -> THIS PERIOD expr .)
    LE              reduce using rule 63 (expr -> THIS PERIOD expr .)
    GE              reduce using rule 63 (expr -> THIS PERIOD expr .)
    GT              reduce using rule 63 (expr -> THIS PERIOD expr .)
    EQ              reduce using rule 63 (expr -> THIS PERIOD expr .)
    NE              reduce using rule 63 (expr -> THIS PERIOD expr .)
    RPAREN          reduce using rule 63 (expr -> THIS PERIOD expr .)
    COMMA           reduce using rule 63 (expr -> THIS PERIOD expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 101

    (35) statement -> ID PERIOD ID . EQUALS expr SEMI statement
    (42) expr -> ID .
    (62) expr -> ID . PERIOD expr
    (65) expr -> ID . LPAREN expr_list RPAREN
    (66) expr -> ID . LPAREN RPAREN

    EQUALS          shift and go to state 124
    PLUS            reduce using rule 42 (expr -> ID .)
    MINUS           reduce using rule 42 (expr -> ID .)
    TIMES           reduce using rule 42 (expr -> ID .)
    DIVIDE          reduce using rule 42 (expr -> ID .)
    LOR             reduce using rule 42 (expr -> ID .)
    LAND            reduce using rule 42 (expr -> ID .)
    LT              reduce using rule 42 (expr -> ID .)
    LE              reduce using rule 42 (expr -> ID .)
    GE              reduce using rule 42 (expr -> ID .)
    GT              reduce using rule 42 (expr -> ID .)
    EQ              reduce using rule 42 (expr -> ID .)
    NE              reduce using rule 42 (expr -> ID .)
    SEMI            reduce using rule 42 (expr -> ID .)
    PERIOD          shift and go to state 92
    LPAREN          shift and go to state 66


state 102

    (62) expr -> ID PERIOD expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 62 (expr -> ID PERIOD expr .)
    PLUS            reduce using rule 62 (expr -> ID PERIOD expr .)
    MINUS           reduce using rule 62 (expr -> ID PERIOD expr .)
    TIMES           reduce using rule 62 (expr -> ID PERIOD expr .)
    DIVIDE          reduce using rule 62 (expr -> ID PERIOD expr .)
    LOR             reduce using rule 62 (expr -> ID PERIOD expr .)
    LAND            reduce using rule 62 (expr -> ID PERIOD expr .)
    LT              reduce using rule 62 (expr -> ID PERIOD expr .)
    LE              reduce using rule 62 (expr -> ID PERIOD expr .)
    GE              reduce using rule 62 (expr -> ID PERIOD expr .)
    GT              reduce using rule 62 (expr -> ID PERIOD expr .)
    EQ              reduce using rule 62 (expr -> ID PERIOD expr .)
    NE              reduce using rule 62 (expr -> ID PERIOD expr .)
    RPAREN          reduce using rule 62 (expr -> ID PERIOD expr .)
    COMMA           reduce using rule 62 (expr -> ID PERIOD expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 103

    (37) var_assignment -> ID EQUALS expr . SEMI
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            shift and go to state 125
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 104

    (65) expr -> ID LPAREN expr_list . RPAREN

    RPAREN          shift and go to state 126


state 105

    (66) expr -> ID LPAREN RPAREN .

    SEMI            reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    LOR             reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    LAND            reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    LT              reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    LE              reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    GE              reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    GT              reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    EQ              reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    NE              reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 66 (expr -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 66 (expr -> ID LPAREN RPAREN .)


state 106

    (67) expr_list -> expr . next_expr
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr
    (68) next_expr -> . COMMA expr_list
    (69) next_expr -> . empty
    (5) empty -> .

    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54
    COMMA           shift and go to state 128
    RPAREN          reduce using rule 5 (empty -> .)

    next_expr                      shift and go to state 127
    empty                          shift and go to state 129

state 107

    (38) var_def -> var_type ID multiple_var_def .

    RETURN          reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    WHILE           reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    IF              reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    THIS            reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    ID              reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    LPAREN          reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    INT_CONST       reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    STRING_CONST    reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    MINUS           reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    LNOT            reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    NEW             reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    SUPER           reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    INT             reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    STRING          reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    VOID            reduce using rule 38 (var_def -> var_type ID multiple_var_def .)
    RBRACE          reduce using rule 38 (var_def -> var_type ID multiple_var_def .)


state 108

    (39) multiple_var_def -> SEMI .

    RETURN          reduce using rule 39 (multiple_var_def -> SEMI .)
    WHILE           reduce using rule 39 (multiple_var_def -> SEMI .)
    IF              reduce using rule 39 (multiple_var_def -> SEMI .)
    THIS            reduce using rule 39 (multiple_var_def -> SEMI .)
    ID              reduce using rule 39 (multiple_var_def -> SEMI .)
    LPAREN          reduce using rule 39 (multiple_var_def -> SEMI .)
    INT_CONST       reduce using rule 39 (multiple_var_def -> SEMI .)
    STRING_CONST    reduce using rule 39 (multiple_var_def -> SEMI .)
    MINUS           reduce using rule 39 (multiple_var_def -> SEMI .)
    LNOT            reduce using rule 39 (multiple_var_def -> SEMI .)
    NEW             reduce using rule 39 (multiple_var_def -> SEMI .)
    SUPER           reduce using rule 39 (multiple_var_def -> SEMI .)
    INT             reduce using rule 39 (multiple_var_def -> SEMI .)
    STRING          reduce using rule 39 (multiple_var_def -> SEMI .)
    VOID            reduce using rule 39 (multiple_var_def -> SEMI .)
    RBRACE          reduce using rule 39 (multiple_var_def -> SEMI .)


state 109

    (40) multiple_var_def -> COMMA . ID multiple_var_def

    ID              shift and go to state 130


state 110

    (64) expr -> SUPER PERIOD expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 64 (expr -> SUPER PERIOD expr .)
    PLUS            reduce using rule 64 (expr -> SUPER PERIOD expr .)
    MINUS           reduce using rule 64 (expr -> SUPER PERIOD expr .)
    TIMES           reduce using rule 64 (expr -> SUPER PERIOD expr .)
    DIVIDE          reduce using rule 64 (expr -> SUPER PERIOD expr .)
    LOR             reduce using rule 64 (expr -> SUPER PERIOD expr .)
    LAND            reduce using rule 64 (expr -> SUPER PERIOD expr .)
    LT              reduce using rule 64 (expr -> SUPER PERIOD expr .)
    LE              reduce using rule 64 (expr -> SUPER PERIOD expr .)
    GE              reduce using rule 64 (expr -> SUPER PERIOD expr .)
    GT              reduce using rule 64 (expr -> SUPER PERIOD expr .)
    EQ              reduce using rule 64 (expr -> SUPER PERIOD expr .)
    NE              reduce using rule 64 (expr -> SUPER PERIOD expr .)
    RPAREN          reduce using rule 64 (expr -> SUPER PERIOD expr .)
    COMMA           reduce using rule 64 (expr -> SUPER PERIOD expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 111

    (15) class_def -> CLASS ID COLON ID class_body .

    CLASS           reduce using rule 15 (class_def -> CLASS ID COLON ID class_body .)
    INT             reduce using rule 15 (class_def -> CLASS ID COLON ID class_body .)
    STRING          reduce using rule 15 (class_def -> CLASS ID COLON ID class_body .)
    VOID            reduce using rule 15 (class_def -> CLASS ID COLON ID class_body .)
    ID              reduce using rule 15 (class_def -> CLASS ID COLON ID class_body .)
    $end            reduce using rule 15 (class_def -> CLASS ID COLON ID class_body .)


state 112

    (16) class_body -> LBRACE . class_member_list RBRACE
    (17) class_member_list -> . class_member
    (18) class_member_list -> . empty
    (19) class_member -> . class_member_def class_next_member
    (5) empty -> .
    (20) class_member_def -> . var_def
    (21) class_member_def -> . func_def
    (38) var_def -> . var_type ID multiple_var_def
    (6) func_def -> . func_header func_body
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID
    (7) func_header -> . var_type ID LPAREN param_list RPAREN

    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12
    ID              shift and go to state 8

    class_member_list              shift and go to state 131
    class_member                   shift and go to state 132
    empty                          shift and go to state 133
    class_member_def               shift and go to state 134
    var_def                        shift and go to state 135
    func_def                       shift and go to state 136
    var_type                       shift and go to state 137
    func_header                    shift and go to state 6

state 113

    (12) func_param_def -> var_type ID .

    COMMA           reduce using rule 12 (func_param_def -> var_type ID .)
    RPAREN          reduce using rule 12 (func_param_def -> var_type ID .)


state 114

    (7) func_header -> var_type ID LPAREN param_list RPAREN .

    LBRACE          reduce using rule 7 (func_header -> var_type ID LPAREN param_list RPAREN .)


state 115

    (11) func_param -> func_param_def next_param .

    RPAREN          reduce using rule 11 (func_param -> func_param_def next_param .)


state 116

    (13) next_param -> COMMA . func_param
    (11) func_param -> . func_param_def next_param
    (12) func_param_def -> . var_type ID
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12
    ID              shift and go to state 8

    func_param                     shift and go to state 138
    func_param_def                 shift and go to state 77
    var_type                       shift and go to state 73

state 117

    (14) next_param -> empty .

    RPAREN          reduce using rule 14 (next_param -> empty .)


state 118

    (31) statement -> RETURN expr SEMI statement .

    RBRACE          reduce using rule 31 (statement -> RETURN expr SEMI statement .)


state 119

    (32) statement -> WHILE LPAREN expr RPAREN . LBRACE statement RBRACE statement

    LBRACE          shift and go to state 139


state 120

    (59) expr -> LPAREN INT RPAREN expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    PLUS            reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    MINUS           reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    TIMES           reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    DIVIDE          reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    LOR             reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    LAND            reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    LT              reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    LE              reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    GE              reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    GT              reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    EQ              reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    NE              reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    RPAREN          reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)
    COMMA           reduce using rule 59 (expr -> LPAREN INT RPAREN expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 121

    (60) expr -> LPAREN STRING RPAREN expr .
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    PLUS            reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    MINUS           reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    TIMES           reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    DIVIDE          reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    LOR             reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    LAND            reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    LT              reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    LE              reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    GE              reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    GT              reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    EQ              reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    NE              reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    RPAREN          reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)
    COMMA           reduce using rule 60 (expr -> LPAREN STRING RPAREN expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! LOR             [ shift and go to state 47 ]
  ! LAND            [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 122

    (33) statement -> IF LPAREN expr RPAREN . LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement

    LBRACE          shift and go to state 140


state 123

    (34) statement -> THIS PERIOD ID EQUALS . expr SEMI statement
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 141

state 124

    (35) statement -> ID PERIOD ID EQUALS . expr SEMI statement
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr                           shift and go to state 142

state 125

    (37) var_assignment -> ID EQUALS expr SEMI .

    RETURN          reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    WHILE           reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    IF              reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    THIS            reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    ID              reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    LPAREN          reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    INT_CONST       reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    STRING_CONST    reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    MINUS           reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    LNOT            reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    NEW             reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    SUPER           reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    INT             reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    STRING          reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    VOID            reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)
    RBRACE          reduce using rule 37 (var_assignment -> ID EQUALS expr SEMI .)


state 126

    (65) expr -> ID LPAREN expr_list RPAREN .

    SEMI            reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    PLUS            reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    MINUS           reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    TIMES           reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    DIVIDE          reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    LOR             reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    LAND            reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    LT              reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    LE              reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    GE              reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    GT              reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    EQ              reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    NE              reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    RPAREN          reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)
    COMMA           reduce using rule 65 (expr -> ID LPAREN expr_list RPAREN .)


state 127

    (67) expr_list -> expr next_expr .

    RPAREN          reduce using rule 67 (expr_list -> expr next_expr .)


state 128

    (68) next_expr -> COMMA . expr_list
    (67) expr_list -> . expr next_expr
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 25
    ID              shift and go to state 56
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    THIS            shift and go to state 57
    SUPER           shift and go to state 36

    expr_list                      shift and go to state 143
    expr                           shift and go to state 106

state 129

    (69) next_expr -> empty .

    RPAREN          reduce using rule 69 (next_expr -> empty .)


state 130

    (40) multiple_var_def -> COMMA ID . multiple_var_def
    (39) multiple_var_def -> . SEMI
    (40) multiple_var_def -> . COMMA ID multiple_var_def

    SEMI            shift and go to state 108
    COMMA           shift and go to state 109

    multiple_var_def               shift and go to state 144

state 131

    (16) class_body -> LBRACE class_member_list . RBRACE

    RBRACE          shift and go to state 145


state 132

    (17) class_member_list -> class_member .

    RBRACE          reduce using rule 17 (class_member_list -> class_member .)


state 133

    (18) class_member_list -> empty .

    RBRACE          reduce using rule 18 (class_member_list -> empty .)


state 134

    (19) class_member -> class_member_def . class_next_member
    (22) class_next_member -> . class_member
    (23) class_next_member -> . empty
    (19) class_member -> . class_member_def class_next_member
    (5) empty -> .
    (20) class_member_def -> . var_def
    (21) class_member_def -> . func_def
    (38) var_def -> . var_type ID multiple_var_def
    (6) func_def -> . func_header func_body
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID
    (7) func_header -> . var_type ID LPAREN param_list RPAREN

    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12
    ID              shift and go to state 8

    class_member_def               shift and go to state 134
    class_next_member              shift and go to state 146
    class_member                   shift and go to state 147
    empty                          shift and go to state 148
    var_def                        shift and go to state 135
    func_def                       shift and go to state 136
    var_type                       shift and go to state 137
    func_header                    shift and go to state 6

state 135

    (20) class_member_def -> var_def .

    INT             reduce using rule 20 (class_member_def -> var_def .)
    STRING          reduce using rule 20 (class_member_def -> var_def .)
    VOID            reduce using rule 20 (class_member_def -> var_def .)
    ID              reduce using rule 20 (class_member_def -> var_def .)
    RBRACE          reduce using rule 20 (class_member_def -> var_def .)


state 136

    (21) class_member_def -> func_def .

    INT             reduce using rule 21 (class_member_def -> func_def .)
    STRING          reduce using rule 21 (class_member_def -> func_def .)
    VOID            reduce using rule 21 (class_member_def -> func_def .)
    ID              reduce using rule 21 (class_member_def -> func_def .)
    RBRACE          reduce using rule 21 (class_member_def -> func_def .)


state 137

    (38) var_def -> var_type . ID multiple_var_def
    (7) func_header -> var_type . ID LPAREN param_list RPAREN

    ID              shift and go to state 149


state 138

    (13) next_param -> COMMA func_param .

    RPAREN          reduce using rule 13 (next_param -> COMMA func_param .)


state 139

    (32) statement -> WHILE LPAREN expr RPAREN LBRACE . statement RBRACE statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 150
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 140

    (33) statement -> IF LPAREN expr RPAREN LBRACE . statement RBRACE ELSE LBRACE statement RBRACE statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 151
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 141

    (34) statement -> THIS PERIOD ID EQUALS expr . SEMI statement
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            shift and go to state 152
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 142

    (35) statement -> ID PERIOD ID EQUALS expr . SEMI statement
    (46) expr -> expr . PLUS expr
    (47) expr -> expr . MINUS expr
    (48) expr -> expr . TIMES expr
    (49) expr -> expr . DIVIDE expr
    (51) expr -> expr . LOR expr
    (52) expr -> expr . LAND expr
    (53) expr -> expr . LT expr
    (54) expr -> expr . LE expr
    (55) expr -> expr . GE expr
    (56) expr -> expr . GT expr
    (57) expr -> expr . EQ expr
    (58) expr -> expr . NE expr

    SEMI            shift and go to state 153
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    LOR             shift and go to state 47
    LAND            shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 143

    (68) next_expr -> COMMA expr_list .

    RPAREN          reduce using rule 68 (next_expr -> COMMA expr_list .)


state 144

    (40) multiple_var_def -> COMMA ID multiple_var_def .

    RETURN          reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    WHILE           reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    IF              reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    THIS            reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    ID              reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    LPAREN          reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    INT_CONST       reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    STRING_CONST    reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    MINUS           reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    LNOT            reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    NEW             reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    SUPER           reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    INT             reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    STRING          reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    VOID            reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)
    RBRACE          reduce using rule 40 (multiple_var_def -> COMMA ID multiple_var_def .)


state 145

    (16) class_body -> LBRACE class_member_list RBRACE .

    CLASS           reduce using rule 16 (class_body -> LBRACE class_member_list RBRACE .)
    INT             reduce using rule 16 (class_body -> LBRACE class_member_list RBRACE .)
    STRING          reduce using rule 16 (class_body -> LBRACE class_member_list RBRACE .)
    VOID            reduce using rule 16 (class_body -> LBRACE class_member_list RBRACE .)
    ID              reduce using rule 16 (class_body -> LBRACE class_member_list RBRACE .)
    $end            reduce using rule 16 (class_body -> LBRACE class_member_list RBRACE .)


state 146

    (19) class_member -> class_member_def class_next_member .

    RBRACE          reduce using rule 19 (class_member -> class_member_def class_next_member .)


state 147

    (22) class_next_member -> class_member .

    RBRACE          reduce using rule 22 (class_next_member -> class_member .)


state 148

    (23) class_next_member -> empty .

    RBRACE          reduce using rule 23 (class_next_member -> empty .)


state 149

    (38) var_def -> var_type ID . multiple_var_def
    (7) func_header -> var_type ID . LPAREN param_list RPAREN
    (39) multiple_var_def -> . SEMI
    (40) multiple_var_def -> . COMMA ID multiple_var_def

    LPAREN          shift and go to state 38
    SEMI            shift and go to state 108
    COMMA           shift and go to state 109

    multiple_var_def               shift and go to state 107

state 150

    (32) statement -> WHILE LPAREN expr RPAREN LBRACE statement . RBRACE statement

    RBRACE          shift and go to state 154


state 151

    (33) statement -> IF LPAREN expr RPAREN LBRACE statement . RBRACE ELSE LBRACE statement RBRACE statement

    RBRACE          shift and go to state 155


state 152

    (34) statement -> THIS PERIOD ID EQUALS expr SEMI . statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 156
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 153

    (35) statement -> ID PERIOD ID EQUALS expr SEMI . statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 157
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 154

    (32) statement -> WHILE LPAREN expr RPAREN LBRACE statement RBRACE . statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 158
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 155

    (33) statement -> IF LPAREN expr RPAREN LBRACE statement RBRACE . ELSE LBRACE statement RBRACE statement

    ELSE            shift and go to state 159


state 156

    (34) statement -> THIS PERIOD ID EQUALS expr SEMI statement .

    RBRACE          reduce using rule 34 (statement -> THIS PERIOD ID EQUALS expr SEMI statement .)


state 157

    (35) statement -> ID PERIOD ID EQUALS expr SEMI statement .

    RBRACE          reduce using rule 35 (statement -> ID PERIOD ID EQUALS expr SEMI statement .)


state 158

    (32) statement -> WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement .

    RBRACE          reduce using rule 32 (statement -> WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement .)


state 159

    (33) statement -> IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE . LBRACE statement RBRACE statement

    LBRACE          shift and go to state 160


state 160

    (33) statement -> IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE . statement RBRACE statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 161
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 161

    (33) statement -> IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement . RBRACE statement

    RBRACE          shift and go to state 162


state 162

    (33) statement -> IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE . statement
    (28) statement -> . var_def statement
    (29) statement -> . var_assignment statement
    (30) statement -> . expr SEMI statement
    (31) statement -> . RETURN expr SEMI statement
    (32) statement -> . WHILE LPAREN expr RPAREN LBRACE statement RBRACE statement
    (33) statement -> . IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement
    (34) statement -> . THIS PERIOD ID EQUALS expr SEMI statement
    (35) statement -> . ID PERIOD ID EQUALS expr SEMI statement
    (36) statement -> . empty
    (38) var_def -> . var_type ID multiple_var_def
    (37) var_assignment -> . ID EQUALS expr SEMI
    (41) expr -> . LPAREN expr RPAREN
    (42) expr -> . ID
    (43) expr -> . INT_CONST
    (44) expr -> . STRING_CONST
    (45) expr -> . MINUS expr
    (46) expr -> . expr PLUS expr
    (47) expr -> . expr MINUS expr
    (48) expr -> . expr TIMES expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . LNOT expr
    (51) expr -> . expr LOR expr
    (52) expr -> . expr LAND expr
    (53) expr -> . expr LT expr
    (54) expr -> . expr LE expr
    (55) expr -> . expr GE expr
    (56) expr -> . expr GT expr
    (57) expr -> . expr EQ expr
    (58) expr -> . expr NE expr
    (59) expr -> . LPAREN INT RPAREN expr
    (60) expr -> . LPAREN STRING RPAREN expr
    (61) expr -> . NEW ID
    (62) expr -> . ID PERIOD expr
    (63) expr -> . THIS PERIOD expr
    (64) expr -> . SUPER PERIOD expr
    (65) expr -> . ID LPAREN expr_list RPAREN
    (66) expr -> . ID LPAREN RPAREN
    (5) empty -> .
    (24) var_type -> . INT
    (25) var_type -> . STRING
    (26) var_type -> . VOID
    (27) var_type -> . ID

    RETURN          shift and go to state 23
    WHILE           shift and go to state 24
    IF              shift and go to state 26
    THIS            shift and go to state 27
    ID              shift and go to state 28
    LPAREN          shift and go to state 25
    INT_CONST       shift and go to state 31
    STRING_CONST    shift and go to state 32
    MINUS           shift and go to state 33
    LNOT            shift and go to state 34
    NEW             shift and go to state 35
    SUPER           shift and go to state 36
    RBRACE          reduce using rule 5 (empty -> .)
    INT             shift and go to state 10
    STRING          shift and go to state 11
    VOID            shift and go to state 12

    expr                           shift and go to state 22
    statement                      shift and go to state 163
    var_def                        shift and go to state 20
    var_assignment                 shift and go to state 21
    empty                          shift and go to state 29
    var_type                       shift and go to state 30

state 163

    (33) statement -> IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement .

    RBRACE          reduce using rule 33 (statement -> IF LPAREN expr RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE statement .)

