#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Project name: Compiler Implementation for VYPlanguage Programming Language
# Authors: Adam MÃºdry (xmudry01), Daniel Paul (xpauld00)

import sys 

import pytest

from vypa_compiler.compiler import compile
from vypa_compiler.internals._utils import ExitCode

code1_src = '''
void main(void) {
    int a, b;
    b = 1;
    a = 9;
    print(a, b);
}'''

code1_output = '''#! /bin/vypint
# VYPcode: 1.0
# Generated by: xmudry01, xpauld00

ALIAS FP $0
JUMP main

# Function: main
LABEL main
ADDI $SP, $SP, 1
SET $FP, $SP
# Created variable: a
SET [$FP + 0], 0
ADDI $SP, $SP, 1

# Created variable: b
SET [$FP + 1], 0
ADDI $SP, $SP, 1

# Create int literal: 1
SET [$SP], 1
ADDI $SP, $SP, 1

# Assign to variable: b
SUBI $SP, $SP, 1
SET [$FP + 1], [$SP]

# Create int literal: 9
SET [$SP], 9
ADDI $SP, $SP, 1

# Assign to variable: a
SUBI $SP, $SP, 1
SET [$FP + 0], [$SP]

# Push identifier a to stack
SET [$SP], [$FP + 0]
ADDI $SP, $SP, 1

# Push identifier b to stack
SET [$SP], [$FP + 1]
ADDI $SP, $SP, 1

# Print: [Identifier | a, Identifier | b]
WRITEI [$SP -2]
WRITEI [$SP -1]
SUBI $SP, $SP, 2

JUMP __END


LABEL __END
'''

def strip_bs(string: str) -> str:
    return "".join([s for s in string.strip().splitlines(True) if s.strip() and not s.startswith('#')])

def test_target_code_ok_1():
    code1_output_stripped = strip_bs(code1_output)
    copiled_output = compile(code1_src)
    copiled_output_stripped = strip_bs(copiled_output)
    assert copiled_output_stripped == code1_output_stripped